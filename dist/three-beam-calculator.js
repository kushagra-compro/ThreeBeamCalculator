(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Calculator"] = factory();
	else
		root["Calculator"] = factory();
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/three-beam-calc-module.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/SteelLibraryDataSchema.json":
/*!********************************************!*\
  !*** ./assets/SteelLibraryDataSchema.json ***!
  \********************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"[{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S3x5.7#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":3,\\\"weightPerUnitLength\\\":5.7,\\\"momentOfInertia_I\\\":2.5,\\\"sectionModulus_Zu\\\":1.67},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S3x7.5#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":3,\\\"weightPerUnitLength\\\":7.5,\\\"momentOfInertia_I\\\":2.91,\\\"sectionModulus_Zu\\\":1.94},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S4x7.7#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":4,\\\"weightPerUnitLength\\\":7.7,\\\"momentOfInertia_I\\\":6.05,\\\"sectionModulus_Zu\\\":3.03},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S4x9.5#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":4,\\\"weightPerUnitLength\\\":9.5,\\\"momentOfInertia_I\\\":6.76,\\\"sectionModulus_Zu\\\":3.38},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S5x10#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":5,\\\"weightPerUnitLength\\\":10,\\\"momentOfInertia_I\\\":12.3,\\\"sectionModulus_Zu\\\":4.9},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S6x12.5#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":6,\\\"weightPerUnitLength\\\":12.5,\\\"momentOfInertia_I\\\":22,\\\"sectionModulus_Zu\\\":7.34},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S6x17.2#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":6,\\\"weightPerUnitLength\\\":17.2,\\\"momentOfInertia_I\\\":26.2,\\\"sectionModulus_Zu\\\":8.74},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S8x18.4#\\\",\\\"priority\\\":2,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":8,\\\"weightPerUnitLength\\\":18.4,\\\"momentOfInertia_I\\\":57.5,\\\"sectionModulus_Zu\\\":14.4},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S8x23#\\\",\\\"priority\\\":3,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":8,\\\"weightPerUnitLength\\\":23,\\\"momentOfInertia_I\\\":64.7,\\\"sectionModulus_Zu\\\":16.2},{\\\"id\\\":\\\"d85417cdab81451589c9765f5dc53477\\\",\\\"beamLabel\\\":\\\"(3)-S10x25.4#\\\",\\\"priority\\\":1,\\\"Shape\\\":\\\"S\\\",\\\"height\\\":10,\\\"weightPerUnitLength\\\":25.4,\\\"momentOfInertia_I\\\":123,\\\"sectionModulus_Zu\\\":24.6}]\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL2Fzc2V0cy9TdGVlbExpYnJhcnlEYXRhU2NoZW1hLmpzb24uanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/SteelLibraryDataSchema.json\n");

/***/ }),

/***/ "./src/three-beam-calc-module.ts":
/*!***************************************!*\
  !*** ./src/three-beam-calc-module.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SteelLibrary = __webpack_require__(/*! ../assets/SteelLibraryDataSchema.json */ \"./assets/SteelLibraryDataSchema.json\");\r\nvar BEAM_ENUM;\r\n(function (BEAM_ENUM) {\r\n    BEAM_ENUM[BEAM_ENUM[\"BEAM1\"] = 0] = \"BEAM1\";\r\n    BEAM_ENUM[BEAM_ENUM[\"BEAM2\"] = 1] = \"BEAM2\";\r\n    BEAM_ENUM[BEAM_ENUM[\"BEAM3\"] = 2] = \"BEAM3\";\r\n})(BEAM_ENUM || (BEAM_ENUM = {}));\r\nvar REACTIONTYPE;\r\n(function (REACTIONTYPE) {\r\n    REACTIONTYPE[\"LEFTREACTION\"] = \"LEFT_REACTION\";\r\n    REACTIONTYPE[\"RIGHTREACTION\"] = \"RIGHT_REACTION\";\r\n})(REACTIONTYPE || (REACTIONTYPE = {}));\r\nvar BENDINGMOMENT;\r\n(function (BENDINGMOMENT) {\r\n    BENDINGMOMENT[\"LEFTBENDINGMOMENT\"] = \"LEFT_BENDING_MOMENT\";\r\n    BENDINGMOMENT[\"RIGHTBENDINGMOMENT\"] = \"RIGHT_BENDING_MOMENT\";\r\n})(BENDINGMOMENT || (BENDINGMOMENT = {}));\r\nvar CONSTANTS;\r\n(function (CONSTANTS) {\r\n    CONSTANTS[CONSTANTS[\"FACTOR_ARC_OF_CONTACT\"] = 180] = \"FACTOR_ARC_OF_CONTACT\";\r\n    CONSTANTS[CONSTANTS[\"FACTOR_MAX_DEFLECTION\"] = 1666] = \"FACTOR_MAX_DEFLECTION\";\r\n    CONSTANTS[CONSTANTS[\"FACTOR_ZU_EXISTING_BEAMS\"] = 17600] = \"FACTOR_ZU_EXISTING_BEAMS\";\r\n    CONSTANTS[CONSTANTS[\"FACTOR_ZU_NEW_BEAMS\"] = 19300] = \"FACTOR_ZU_NEW_BEAMS\";\r\n    CONSTANTS[CONSTANTS[\"FACTOR_INCH_TO_FEET\"] = 12] = \"FACTOR_INCH_TO_FEET\";\r\n    CONSTANTS[CONSTANTS[\"BEAM_SPACING_RATIO_FIRST_BEAM\"] = 0.8] = \"BEAM_SPACING_RATIO_FIRST_BEAM\";\r\n    CONSTANTS[CONSTANTS[\"BEAM_SPACING_RATIO_SECOND_BEAM\"] = 0.8] = \"BEAM_SPACING_RATIO_SECOND_BEAM\";\r\n    CONSTANTS[CONSTANTS[\"BEAM_SPACING_RATIO_THIRD_BEAM\"] = 0.2] = \"BEAM_SPACING_RATIO_THIRD_BEAM\";\r\n    CONSTANTS[CONSTANTS[\"MODULUS_OF_ELASTICITY\"] = 29000000] = \"MODULUS_OF_ELASTICITY\";\r\n    CONSTANTS[CONSTANTS[\"BORDERLINE_UPPER_LIMIT\"] = 1] = \"BORDERLINE_UPPER_LIMIT\";\r\n    CONSTANTS[CONSTANTS[\"BORDERLINE_LOWER_LIMIT\"] = 0.9] = \"BORDERLINE_LOWER_LIMIT\";\r\n})(CONSTANTS || (CONSTANTS = {}));\r\nvar LOAD_TYPE;\r\n(function (LOAD_TYPE) {\r\n    LOAD_TYPE[\"POINTLOAD\"] = \"PointLoad\";\r\n    LOAD_TYPE[\"MIDPOINTLOAD\"] = \"MidPointLoad\";\r\n    LOAD_TYPE[\"ADDITIONALLOAD\"] = \"AdditionalLoad#\";\r\n})(LOAD_TYPE || (LOAD_TYPE = {}));\r\nvar BEAM_TYPE;\r\n(function (BEAM_TYPE) {\r\n    BEAM_TYPE[\"NEW\"] = \"New\";\r\n    BEAM_TYPE[\"EXISTING\"] = \"Existing\";\r\n})(BEAM_TYPE || (BEAM_TYPE = {}));\r\nvar BEAM_STATUS;\r\n(function (BEAM_STATUS) {\r\n    BEAM_STATUS[\"YES\"] = \"Yes\";\r\n    BEAM_STATUS[\"BORDERLINE\"] = \"Borderline\";\r\n    BEAM_STATUS[\"NO\"] = \"No\";\r\n})(BEAM_STATUS || (BEAM_STATUS = {}));\r\n/* class name : ThreeBeamCalcModule\r\nDescitption: This class calculates parameters of 3-Beam Calculator Module.\r\nIt implements 'ICalcModule' interface with method 'calculate()'.\r\n*/\r\nvar ThreeBeamCalcModule = /** @class */ (function () {\r\n    function ThreeBeamCalcModule() {\r\n    }\r\n    /* Function signature : calculate(calculatorModel: ICalcDataModel): ICalcDataModel\r\n    Function description : This function updates the calculated parameters in 'calculatorModel' input.\r\n    Input Parameters: calculatorModel\r\n    Output Parameters: updated calculatorModel\r\n    */\r\n    ThreeBeamCalcModule.prototype.calculate = function (calcData) {\r\n        this.calcData = calcData;\r\n        this.calculateLiveLoad();\r\n        this.calculateDeadLoad();\r\n        this.beamParamCalculations();\r\n        this.calculateMaxReqSectionModulus();\r\n        this.steelCalculations();\r\n        /* returning 'calculatorModel' input json after updating the\r\n        calculated parameters present in 'calculatorModel' input using 'this.calcData' */\r\n        return this.calcData;\r\n    };\r\n    /* This function calculates the gross total of live load,\r\n    and total live load existing on the three beam structure */\r\n    ThreeBeamCalcModule.prototype.calculateLiveLoad = function () {\r\n        this.calcData._grossTotalLiveLoad = this.getGrossTotalLiveLoad();\r\n        this.calcData._totalLiveLoad = this.getTotalLiveLoad();\r\n    };\r\n    /* This function calculates the gross total of live load */\r\n    ThreeBeamCalcModule.prototype.getGrossTotalLiveLoad = function () {\r\n        var grossLiveLoad = this.calcData._carWeight +\r\n            this.calcData._capacity +\r\n            this.calcData._counterWeight +\r\n            this.calcData._hoistRopeWeight +\r\n            this.calcData._compensationWeight +\r\n            this.calcData._travellingCableWeight;\r\n        return grossLiveLoad;\r\n    };\r\n    /* This function calculates the total live load */\r\n    ThreeBeamCalcModule.prototype.getTotalLiveLoad = function () {\r\n        var totalLiveLoad = 0;\r\n        totalLiveLoad = ((2 * (this.calcData._carWeight +\r\n            this.calcData._capacity +\r\n            (0.5 * this.calcData._hoistRopeWeight) +\r\n            (0.5 * this.calcData._compensationWeight) +\r\n            this.calcData._travellingCableWeight)) / this.calcData._carRopingRatio._leftValue) +\r\n            ((2 * (this.calcData._counterWeight +\r\n                (0.5 * this.calcData._hoistRopeWeight) +\r\n                (0.5 * this.calcData._compensationWeight))) / this.calcData._counterWeightRopingRatio._leftValue);\r\n        return totalLiveLoad;\r\n    };\r\n    /* This function is used to calculate total dead load existing on the three beam structure */\r\n    ThreeBeamCalcModule.prototype.calculateDeadLoad = function () {\r\n        this.getFloorSlabWeight();\r\n        this.calcData._totalDeadLoad =\r\n            this.calcData._blockUpBeamsWeight +\r\n                this.calcData._machineWeight +\r\n                this.calcData._motorWeight +\r\n                this.calcData._isolationWeight +\r\n                this.calcData._floorSlabWeight +\r\n                this.calcData._deflectorWeight;\r\n    };\r\n    /* This function is used to calculate the weight of floor slab */\r\n    ThreeBeamCalcModule.prototype.getFloorSlabWeight = function () {\r\n        var maxLength = Math.max.apply(Math, this.calcData._beamParams.map(function (beamObj) {\r\n            return beamObj._distanceBetweenReactions_L;\r\n        }));\r\n        this.calcData._floorSlabWeight = this.calcData._slabThickness *\r\n            (maxLength / CONSTANTS.FACTOR_INCH_TO_FEET) * (this.calcData._machineBeamSpacing_Z.Z / CONSTANTS.FACTOR_INCH_TO_FEET) * (11.5);\r\n    };\r\n    /* This function is used to calculate parameters of each beam */\r\n    ThreeBeamCalcModule.prototype.beamParamCalculations = function () {\r\n        var _this = this;\r\n        this.calcData._beamParams.forEach(function (beamObj) {\r\n            _this.calcData._totalDeadLoad = _this.calcData._totalDeadLoad +\r\n                beamObj._machineBeamWeight +\r\n                beamObj._blockingBeamWeight;\r\n            _this.machineLoadPointCalculations(beamObj);\r\n            _this.rankBeamPoints(beamObj);\r\n            _this.calculateReactionForce(beamObj);\r\n            _this.calculateBendingMoment(beamObj);\r\n            _this.calculateBeamSectionModulus(beamObj);\r\n            _this.calculateMaximumDeflection(beamObj);\r\n        });\r\n    };\r\n    /* This function calculates the parameters existing on each load point*/\r\n    ThreeBeamCalcModule.prototype.machineLoadPointCalculations = function (beamObj) {\r\n        var _this = this;\r\n        beamObj._machineLoadPoints.forEach(function (loadPointObj) {\r\n            _this.calculatePointDistance(beamObj._distanceBetweenReactions_L, loadPointObj);\r\n            _this.calculateValueV1(loadPointObj);\r\n            _this.calculatePointLiveLoad(beamObj, loadPointObj);\r\n            _this.calculatePointDeadLoad(beamObj, loadPointObj);\r\n            _this.calculateTotalLoad(loadPointObj);\r\n            _this.calculateStaticLoad(loadPointObj);\r\n        });\r\n    };\r\n    /* This function assigns rank to each load point,\r\n     on the basis of their distance from left reaction point of a beam */\r\n    ThreeBeamCalcModule.prototype.rankBeamPoints = function (beamObj) {\r\n        var rank = 1;\r\n        beamObj._machineLoadPoints.sort(function (pointObj1, pointObj2) {\r\n            return pointObj1._distanceLeft_a - pointObj2._distanceLeft_a;\r\n        });\r\n        var loadPoint = 0;\r\n        for (loadPoint = 0; loadPoint < beamObj._machineLoadPoints.length - 1; loadPoint++) {\r\n            beamObj._machineLoadPoints[loadPoint]._rank = rank;\r\n            if (beamObj._machineLoadPoints[loadPoint]._distanceLeft_a <\r\n                beamObj._machineLoadPoints[loadPoint + 1]._distanceLeft_a) {\r\n                rank++;\r\n            }\r\n        }\r\n        beamObj._machineLoadPoints[loadPoint]._rank = rank;\r\n    };\r\n    /* This function calculates live load existing on a point of a beam */\r\n    ThreeBeamCalcModule.prototype.calculatePointLiveLoad = function (beamObj, pointObj) {\r\n        // Live load of mid point is 0\r\n        if (pointObj._loadType === LOAD_TYPE.POINTLOAD) {\r\n            var liveLoad = 0;\r\n            if (beamObj._beamIndex === BEAM_ENUM.BEAM1 || beamObj._beamIndex === BEAM_ENUM.BEAM2) {\r\n                liveLoad = (this.calcData._arcOfContact / CONSTANTS.FACTOR_ARC_OF_CONTACT) *\r\n                    this.calcData._totalLiveLoad * ((CONSTANTS.BEAM_SPACING_RATIO_FIRST_BEAM) - ((CONSTANTS.BEAM_SPACING_RATIO_FIRST_BEAM) * ((this.calcData._machineBeamSpacing_Z.X) /\r\n                    (this.calcData._machineBeamSpacing_Z.X + this.calcData._machineBeamSpacing_Z.Y))));\r\n                liveLoad = this.roundUptoDecimalPlace(liveLoad, 1);\r\n                pointObj._liveLoad = liveLoad;\r\n            }\r\n            else if (beamObj._beamIndex === BEAM_ENUM.BEAM3) {\r\n                liveLoad = (this.calcData._arcOfContact / CONSTANTS.FACTOR_ARC_OF_CONTACT) *\r\n                    this.calcData._totalLiveLoad * (CONSTANTS.BEAM_SPACING_RATIO_THIRD_BEAM);\r\n                liveLoad = this.roundUptoDecimalPlace(liveLoad, 1);\r\n                pointObj._liveLoad = liveLoad;\r\n            }\r\n            else {\r\n                // other beams\r\n            }\r\n        }\r\n    };\r\n    /* This function calculates dead load existing on a point of a beam */\r\n    ThreeBeamCalcModule.prototype.calculatePointDeadLoad = function (beamObj, pointObj) {\r\n        // dead loads of additional loads is 0\r\n        if (pointObj._loadType === LOAD_TYPE.POINTLOAD) {\r\n            var deadLoad = (this.calcData._machineWeight +\r\n                this.calcData._motorWeight + this.calcData._isolationWeight) / 3;\r\n            deadLoad = this.roundUptoDecimalPlace(deadLoad, 1);\r\n            pointObj._deadLoad = deadLoad;\r\n        }\r\n        else if (pointObj._loadType === LOAD_TYPE.MIDPOINTLOAD) {\r\n            var deadLoad = beamObj._machineBeamWeight +\r\n                beamObj._blockingBeamWeight + (this.calcData._blockUpBeamsWeight / 3) +\r\n                (this.calcData._floorSlabWeight / 3);\r\n            deadLoad = this.roundUptoDecimalPlace(deadLoad, 1);\r\n            pointObj._deadLoad = deadLoad;\r\n        }\r\n        else {\r\n            // other points type\r\n        }\r\n    };\r\n    /* This function calculates total load existing on a point of a beam */\r\n    ThreeBeamCalcModule.prototype.calculateTotalLoad = function (pointObj) {\r\n        pointObj._totalLoad = pointObj._liveLoad + pointObj._deadLoad;\r\n    };\r\n    /* This function calculates static load existing on a point of a beam */\r\n    ThreeBeamCalcModule.prototype.calculateStaticLoad = function (pointObj) {\r\n        pointObj._staticLoad = (pointObj._liveLoad) / 2;\r\n    };\r\n    /* This function calculates momentum of a load with respect to a point of a beam */\r\n    ThreeBeamCalcModule.prototype.getMomentum = function (load, distance) {\r\n        var momentum = 0;\r\n        momentum = load * distance;\r\n        return momentum;\r\n    };\r\n    /* This function calculates both the reaction forces existing on a beam */\r\n    ThreeBeamCalcModule.prototype.calculateReactionForce = function (beamObj) {\r\n        var reactionForceObj = this.getReaction(beamObj);\r\n        beamObj._reactions._reactionLeft = reactionForceObj[REACTIONTYPE.LEFTREACTION];\r\n        beamObj._reactions._reactionRight = reactionForceObj[REACTIONTYPE.RIGHTREACTION];\r\n    };\r\n    /* This function calculates and returns a single reaction force of a beam */\r\n    ThreeBeamCalcModule.prototype.getReaction = function (beamObj) {\r\n        var _this = this;\r\n        var momentumLeftReaction = 0;\r\n        var momentumRightReaction = 0;\r\n        var reactionForceObj = {};\r\n        beamObj._machineLoadPoints.forEach(function (loadPointObj) {\r\n            momentumRightReaction = momentumRightReaction +\r\n                _this.getMomentum(loadPointObj._totalLoad, loadPointObj._distanceRight_b);\r\n            momentumLeftReaction = momentumLeftReaction +\r\n                _this.getMomentum(loadPointObj._totalLoad, loadPointObj._distanceLeft_a);\r\n        });\r\n        reactionForceObj[REACTIONTYPE.LEFTREACTION] = momentumRightReaction / beamObj._distanceBetweenReactions_L;\r\n        reactionForceObj[REACTIONTYPE.RIGHTREACTION] = momentumLeftReaction / beamObj._distanceBetweenReactions_L;\r\n        return reactionForceObj;\r\n    };\r\n    /* this function calculates bending moment existing on a beam */\r\n    ThreeBeamCalcModule.prototype.calculateBendingMoment = function (beamObj) {\r\n        var referencePointObj = this.getRefrencePoint(beamObj);\r\n        var bendingMomentObj = this.getBendingMoment(beamObj, referencePointObj);\r\n        beamObj._bendingMoments._bendingMomentLeft = bendingMomentObj[BENDINGMOMENT.LEFTBENDINGMOMENT];\r\n        beamObj._bendingMoments._bendingMomentRight = bendingMomentObj[BENDINGMOMENT.RIGHTBENDINGMOMENT];\r\n    };\r\n    ThreeBeamCalcModule.prototype.getBendingMoment = function (beamObj, referencePointObj) {\r\n        var _this = this;\r\n        var bendingMomentObj = {};\r\n        var leftBendingMoment = this.getMomentum(beamObj._reactions._reactionLeft, referencePointObj._distanceLeft_a);\r\n        var rightBendingMoment = this.getMomentum(beamObj._reactions._reactionRight, referencePointObj._distanceRight_b);\r\n        var referencePointIndex = referencePointObj._rank - 1;\r\n        beamObj._machineLoadPoints.forEach(function (loadpointObj, index) {\r\n            if (index < referencePointIndex) {\r\n                leftBendingMoment = leftBendingMoment -\r\n                    _this.getMomentum(loadpointObj._totalLoad, referencePointObj._distanceLeft_a - loadpointObj._distanceLeft_a);\r\n            }\r\n            else if (index > referencePointIndex) {\r\n                rightBendingMoment = rightBendingMoment -\r\n                    _this.getMomentum(loadpointObj._totalLoad, loadpointObj._distanceLeft_a - referencePointObj._distanceLeft_a);\r\n            }\r\n        });\r\n        bendingMomentObj[BENDINGMOMENT.LEFTBENDINGMOMENT] = leftBendingMoment;\r\n        bendingMomentObj[BENDINGMOMENT.RIGHTBENDINGMOMENT] = rightBendingMoment;\r\n        return bendingMomentObj;\r\n    };\r\n    /* This function returns the reference load point,\r\n     with respect to which we need to calculate momentum of other loads existing on the beam*/\r\n    ThreeBeamCalcModule.prototype.getRefrencePoint = function (beamObj) {\r\n        var sumTotalLoad = 0;\r\n        var referencePointObj = beamObj._machineLoadPoints.find(function (loadPointObj) {\r\n            sumTotalLoad = sumTotalLoad + loadPointObj._totalLoad;\r\n            if (beamObj._reactions._reactionLeft <= sumTotalLoad) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        });\r\n        return referencePointObj;\r\n    };\r\n    /* This function calculates the required section modulus of a beam */\r\n    ThreeBeamCalcModule.prototype.calculateBeamSectionModulus = function (beamObj) {\r\n        var requiredBeamSectionModulus = this.getReqSectionModulus(beamObj._bendingMoments._bendingMomentLeft, beamObj._bendingMoments._bendingMomentRight);\r\n        beamObj._requiredSectionModulus_Zu = requiredBeamSectionModulus;\r\n    };\r\n    /* Calculates maximum bending moment reuired for selection of beam */\r\n    ThreeBeamCalcModule.prototype.calculateMaxReqSectionModulus = function () {\r\n        var maximumRequiredSectionModulus = 0;\r\n        this.calcData._beamParams.forEach(function (beamObj) {\r\n            if (maximumRequiredSectionModulus < beamObj._requiredSectionModulus_Zu) {\r\n                maximumRequiredSectionModulus = beamObj._requiredSectionModulus_Zu;\r\n            }\r\n        });\r\n        this.calcData._maximumRequiredSectionModulus_Zu = maximumRequiredSectionModulus;\r\n    };\r\n    /* This function calculates the required section modulus of a beam */\r\n    ThreeBeamCalcModule.prototype.getReqSectionModulus = function () {\r\n        var bendingMoments = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            bendingMoments[_i] = arguments[_i];\r\n        }\r\n        var requiredSectionModulus = 0;\r\n        var maximumBendingMoment = Math.max.apply(Math, bendingMoments);\r\n        if (this.calcData._beamType === BEAM_TYPE.NEW) {\r\n            requiredSectionModulus = maximumBendingMoment / CONSTANTS.FACTOR_ZU_NEW_BEAMS;\r\n        }\r\n        else if (this.calcData._beamType === BEAM_TYPE.EXISTING) {\r\n            requiredSectionModulus = maximumBendingMoment / CONSTANTS.FACTOR_ZU_EXISTING_BEAMS;\r\n        }\r\n        return requiredSectionModulus;\r\n    };\r\n    /* This function calculates maximum deflection of a beam */\r\n    ThreeBeamCalcModule.prototype.calculateMaximumDeflection = function (beamObj) {\r\n        beamObj._maximumDeflection = (beamObj._distanceBetweenReactions_L) / CONSTANTS.FACTOR_MAX_DEFLECTION;\r\n    };\r\n    /* This function calculates distance between point load and right reaction point of a beam */\r\n    ThreeBeamCalcModule.prototype.calculatePointDistance = function (length, loadPointObj) {\r\n        loadPointObj._distanceRight_b = length - loadPointObj._distanceLeft_a;\r\n    };\r\n    ThreeBeamCalcModule.prototype.calculateValueV1 = function (loadPointObj) {\r\n        // val = b*sqrt(1/3+(2*a/3*b))\r\n        var valueV1 = 0;\r\n        valueV1 = loadPointObj._distanceRight_b *\r\n            (Math.sqrt((1 / 3) +\r\n                ((2 * loadPointObj._distanceLeft_a) / (3 * loadPointObj._distanceRight_b))));\r\n        loadPointObj._valueV1 = valueV1;\r\n    };\r\n    /* This function calculates the selection status of input steel beams,\r\n    based on the value of reaction force and deflection, existing on a beam*/\r\n    ThreeBeamCalcModule.prototype.steelCalculations = function () {\r\n        var _this = this;\r\n        SteelLibrary.forEach(function (steelLibMember) {\r\n            var steelObj = {};\r\n            steelObj._steelLabel = steelLibMember.steelLabel;\r\n            steelObj._steelMeta = _this.getSteelMetaData(steelLibMember);\r\n            steelObj._calculations = {};\r\n            steelObj._calculations._sectionModulusStatus =\r\n                _this.getSteelStatus(_this.calcData._maximumRequiredSectionModulus_Zu, steelLibMember.sectionModulus_Zu);\r\n            steelObj._calculations._deflectionStatus = _this.getSteelDeflectionStatus(steelLibMember);\r\n            _this.calcData._steelLibraryMembers.push(steelObj);\r\n        });\r\n    };\r\n    /* This function calculates meta data of input steel beam */\r\n    ThreeBeamCalcModule.prototype.getSteelMetaData = function (steelObj) {\r\n        var steelMetaData = {};\r\n        steelMetaData._sectionModulus_Zu = steelObj.sectionModulus_Zu;\r\n        steelMetaData._momentofInertia_I = steelObj.momentOfInertia_I;\r\n        steelMetaData._shape = this.getSteelShape(steelObj);\r\n        return steelMetaData;\r\n    };\r\n    /* This function calculates shape, height and weight per unit length of input steel beam */\r\n    ThreeBeamCalcModule.prototype.getSteelShape = function (steelObj) {\r\n        var steelShape = {};\r\n        steelShape._type = steelObj.Shape;\r\n        steelShape._height = steelObj.height;\r\n        steelShape._weightPerUnitLength = steelObj.weightPerUnitLength;\r\n        return steelShape;\r\n    };\r\n    /* This function calculates selection status of input steel beam,\r\n     using deflection of a beam */\r\n    ThreeBeamCalcModule.prototype.getSteelDeflectionStatus = function (steelObj) {\r\n        var _this = this;\r\n        var deflectionStatusArray = [];\r\n        this.calcData._beamParams.forEach(function (beamObj) {\r\n            _this.mergeEqualRankPoints(beamObj);\r\n            var deflectionStatusObj = _this.getDeflectionStatus(steelObj, beamObj);\r\n            if (deflectionStatusObj) {\r\n                deflectionStatusArray.push(deflectionStatusObj);\r\n            }\r\n        });\r\n        return deflectionStatusArray;\r\n    };\r\n    /* This function merges load points,\r\n     which exists at same distance from left reaction point of a beam */\r\n    ThreeBeamCalcModule.prototype.mergeEqualRankPoints = function (beamObj) {\r\n        var _this = this;\r\n        var existingPoint = {};\r\n        beamObj._machineLoadPoints.forEach(function (loadPoint) {\r\n            if (existingPoint[loadPoint._distanceLeft_a]) {\r\n                var equalRankPointObj = existingPoint[loadPoint._distanceLeft_a];\r\n                /* Adding loads of point existing at same location */\r\n                equalRankPointObj._liveLoad = equalRankPointObj._liveLoad + loadPoint._liveLoad;\r\n                equalRankPointObj._deadLoad = equalRankPointObj._deadLoad + loadPoint._deadLoad;\r\n                equalRankPointObj._totalLoad = equalRankPointObj._totalLoad + loadPoint._totalLoad;\r\n                equalRankPointObj._staticLoad = equalRankPointObj._staticLoad + loadPoint._staticLoad;\r\n                /* Removing merged load point from beam */\r\n                loadPoint._liveLoad = 0;\r\n                loadPoint._deadLoad = 0;\r\n                loadPoint._totalLoad = 0;\r\n                loadPoint._staticLoad = 0;\r\n                loadPoint._distanceLeft_a = 0;\r\n                loadPoint._distanceRight_b = beamObj._distanceBetweenReactions_L;\r\n                _this.calculateValueV1(loadPoint);\r\n            }\r\n            else {\r\n                existingPoint[loadPoint._distanceLeft_a] = loadPoint;\r\n            }\r\n        });\r\n    };\r\n    ThreeBeamCalcModule.prototype.getDeflectionStatus = function (steelObj, beamObj) {\r\n        var deflectionStatusObj = {};\r\n        deflectionStatusObj._beamIndex = beamObj._beamIndex;\r\n        deflectionStatusObj._pointDeflection = this.getPointsDeflection(steelObj, beamObj);\r\n        deflectionStatusObj._totalDeflection = this.getTotalDeflection(deflectionStatusObj);\r\n        deflectionStatusObj._status =\r\n            this.getSteelStatus(deflectionStatusObj._totalDeflection, beamObj._maximumDeflection);\r\n        return deflectionStatusObj;\r\n    };\r\n    ThreeBeamCalcModule.prototype.getPointsDeflection = function (steelObj, beamObj) {\r\n        var _this = this;\r\n        var pointDeflectionArray = [];\r\n        beamObj._machineLoadPoints.forEach(function (loadPointObj) {\r\n            var pointDeflectionObj = _this.getPointDeflection(steelObj, loadPointObj);\r\n            if (pointDeflectionObj) {\r\n                pointDeflectionArray.push(pointDeflectionObj);\r\n            }\r\n        });\r\n        return pointDeflectionArray;\r\n    };\r\n    /* This function calculates total deflection of a beam due to all load points existing on a beam*/\r\n    ThreeBeamCalcModule.prototype.getTotalDeflection = function (deflectionStatusObj) {\r\n        var totalDeflection = 0;\r\n        deflectionStatusObj._pointDeflection.forEach(function (pointDeflection) {\r\n            totalDeflection = totalDeflection + pointDeflection._deflection;\r\n        });\r\n        return totalDeflection;\r\n    };\r\n    ThreeBeamCalcModule.prototype.getPointDeflection = function (steelObj, loadPointObj) {\r\n        var pointDeflection = 0;\r\n        var pointDeflectionObj = {};\r\n        pointDeflectionObj._rank = loadPointObj._rank;\r\n        pointDeflection = ((loadPointObj._staticLoad + loadPointObj._deadLoad) *\r\n            (loadPointObj._distanceLeft_a) * Math.pow(loadPointObj._valueV1, 3)) /\r\n            (3 * CONSTANTS.MODULUS_OF_ELASTICITY * (loadPointObj._distanceLeft_a + loadPointObj._distanceRight_b)\r\n                * steelObj.momentOfInertia_I);\r\n        pointDeflectionObj._deflection = pointDeflection;\r\n        return pointDeflectionObj;\r\n    };\r\n    ThreeBeamCalcModule.prototype.getSteelStatus = function (requiredValue, referencedValue) {\r\n        if (requiredValue > referencedValue) {\r\n            return BEAM_STATUS.NO;\r\n        }\r\n        else if (CONSTANTS.BORDERLINE_LOWER_LIMIT <\r\n            (requiredValue / referencedValue) && (requiredValue / referencedValue) <\r\n            CONSTANTS.BORDERLINE_UPPER_LIMIT) {\r\n            return BEAM_STATUS.BORDERLINE;\r\n        }\r\n        else {\r\n            return BEAM_STATUS.YES;\r\n        }\r\n    };\r\n    ThreeBeamCalcModule.prototype.roundUptoDecimalPlace = function (data, numberOfDecimalPlaces) {\r\n        var roundedData = 0;\r\n        if (data && numberOfDecimalPlaces >= 0) {\r\n            roundedData = parseInt(data.toFixed(numberOfDecimalPlaces), 10);\r\n        }\r\n        return roundedData;\r\n    };\r\n    return ThreeBeamCalcModule;\r\n}());\r\nexports.ThreeBeamCalcModule = ThreeBeamCalcModule;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/three-beam-calc-module.ts\n");

/***/ })

/******/ });
});